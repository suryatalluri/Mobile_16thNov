/*Copyright (c) 2015-2016 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/

package com.mobile_16thnov.test_16thnov;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import javax.persistence.PrimaryKeyJoinColumn;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.OneToMany;
import javax.persistence.Table;


import java.util.Arrays;

import javax.persistence.Transient;
import javax.persistence.CascadeType;
import javax.persistence.UniqueConstraint;




/**
 * Table1 generated by hbm2java
 */
@Entity
@Table(name="TABLE1"
)
public class Table1  implements java.io.Serializable
 {


private Table1Id id;
private String column3;
private Set<Table2> table2s = new HashSet<Table2>(0);

    public Table1() {
    }



     @EmbeddedId

    

    @AttributeOverrides( {
        @AttributeOverride(name="column2", column=@Column(name="COLUMN2", nullable=false) ), 
        @AttributeOverride(name="id", column=@Column(name="ID", nullable=false) ) } )
    public Table1Id getId() {
        return this.id;
    }
    
    public void setId(Table1Id id) {
        this.id = id;
    }

    

    @Column(name="COLUMN3")
    public String getColumn3() {
        return this.column3;
    }
    
    public void setColumn3(String column3) {
        this.column3 = column3;
    }

@OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="table1")
    public Set<Table2> getTable2s() {
        return this.table2s;
    }
    
    public void setTable2s(Set<Table2> table2s) {
        this.table2s = table2s;
    }



public boolean equals(Object o) {
         if (this == o)
         return true;
		 if ( (o == null ) )
		 return false;
		 if ( !(o instanceof Table1) )
		 return false;

		 Table1 that = ( Table1 ) o;

		 return ( (this.getId()==that.getId()) || ( this.getId()!=null && that.getId()!=null && this.getId().equals(that.getId()) ) );

   }

   public int hashCode() {
         int result = 17;

         result = 37 * result + ( getId() == null ? 0 : this.getId().hashCode() );

         return result;
     }


}

